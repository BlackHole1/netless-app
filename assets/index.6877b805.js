var e=Object.defineProperty,t=Object.defineProperties,s=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable,r=(t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i,o=(e,t)=>{for(var s in t||(t={}))n.call(t,s)&&r(e,s,t[s]);if(i)for(var s of i(t))a.call(t,s)&&r(e,s,t[s]);return e};import{s as l}from"./side-effect-manager.es.3578cf95.js";import{e as d}from"./ensure-attributes.2c659353.js";let c;const h={appName:"classic",showMenuBar:!0,showAlgebraInput:!0,showToolBar:!0,customToolBar:"0 39 73 62 | 1 501 67 , 5 19 , 72 75 76 | 2 15 45 , 18 65 , 7 37 | 4 3 8 9 , 13 44 , 58 , 47 | 16 51 64 , 70 | 10 34 53 11 , 24  20 22 , 21 23 | 55 56 57 , 12 | 36 46 , 38 49  50 , 71  14  68 | 30 29 54 32 31 33 | 25 17 26 60 52 61 | 40 41 42 , 27 28 35 , 6",showToolBarHelp:!1,showResetIcon:!1,enableFileFeatures:!1,enableLabelDrags:!1,enableShiftDragZoom:!0,enableRightClick:!0,errorDialogsActive:!1,allowStyleBar:!1,preventFocus:!1,useBrowserForJS:!0,language:"en",borderColor:"transparent"};class p{constructor(e){var t;this.currentAnimations=[],this.embeds={},this.storageCallback=0,this.initAllEmbeds=()=>{for(const e of this.api.getAllObjectNames("embed"))this.initEmbed(e)},this.objectsInWaiting=[],this.updateCallback=0,this.dispatchUpdates=()=>{this.updateCallback||(this.updateCallback=setTimeout(this._dispatchUpdates,this.delay))},this._dispatchUpdates=()=>{const{objectsInWaiting:e}=this;this.objectsInWaiting=[];for(const t of e){const e=this.api.getEmbeddedCalculators(!0),s=null==e?void 0:e[t];(null==s?void 0:s.controller)&&this.sendEvent("evalGMContent",s.toJSON(),t);const i=this.api.getCommandString(t,!1);if(i){this.sendEvent("evalCommand",`${t} := ${i}`,t);const e=this.api.getObjectsOfItsGroup(t);(null==e?void 0:e.length)&&this.sendEvent("addToGroup",t,e)}if(!i||this.api.isMoveable(t)){const e=this.api.getXML(t);this.sendEvent("evalXML",e,t)}this.sendEvent("select",t,!0)}this.updateCallback=0},this.updateListener=e=>{!this.api.hasUnlabeledPredecessors(e)&&!this.api.isMoveable(e)||this.currentAnimations.includes(e)||this.objectsInWaiting.includes(e)||(this.objectsInWaiting.push(e),this.dispatchUpdates())},this.addListener=e=>{const t=this.api.getImageFileName(e);if(t){const e=this.api.getFileJSON();for(const s of e.archive)s.fileName.includes(t)&&this.sendEvent("addImage",JSON.stringify(s))}const s=this.api.getXML(e),i=this.api.getCommandString(e)&&this.api.getAlgorithmXML(e);this.sendEvent("addObject",i||s,e),this.sendEvent("deselect"),this.sendEvent("select",e,!0),setTimeout((()=>this.initEmbed(e)),500)},this.removeListener=e=>{this.sendEvent("deleteObject",e),delete this.embeds[e]},this.renameListener=(e,t)=>{this.sendEvent("renameObject",e,t)},this.clientListener=e=>{let t,s;switch(e.type){case"updateStyle":t=e.target,s=this.api.getXML(t),this.sendEvent("evalXML",s);break;case"editorStart":this.lastEditingLabel=e.target;break;case"editorKeyTyped":s=this.api.getEditorState(),this.sendEvent("setEditorState",s,this.lastEditingLabel);break;case"editorStop":this.lastEditingLabel=void 0,this.sendEvent("setEditorState",JSON.stringify({content:""}));break;case"deselect":this.sendEvent("deselect",e.target);break;case"select":this.sendEvent("select",e.target);break;case"embeddedContentChanged":t=e[1],s=e[2],this.sendEvent("embeddedContentChanged",s,t);break;case"undo":case"redo":case"addPolygonComplete":s=this.api.getXML(),this.sendEvent("setXML",s);break;case"addSlide":this.sendEvent("addSlide");break;case"removeSlide":case"moveSlide":case"selectSlide":case"clearSlide":case"orderingChange":s=e[2],this.sendEvent(e.type,s);break;case"pasteSlide":({cardIdx:s,ggbFile:t}=e),this.sendEvent(e.type,s,t);break;case"startAnimation":t=e[1],this.currentAnimations.push(t),this.sendEvent(e.type,t,t);break;case"stopAnimation":t=e[1],this.currentAnimations.splice(this.currentAnimations.indexOf(t),1),this.sendEvent(e.type,t,t);break;case"groupObjects":case"ungroupObjects":s=e.targets,this.sendEvent(e.type,s);break;case"pasteElmsComplete":s=e.targets.map((e=>this.api.getXML(e))).join(""),this.sendEvent("evalXML",s);break;case"addGeoToTV":case"removeGeoFromTV":s=e[1],this.sendEvent(e.type,s);break;case"setValuesOfTV":s=e[2],this.sendEvent(e.type,s);break;case"showPointsTV":({column:s,show:t}=e),this.sendEvent(e.type,s,t);break;case"lockTextElement":case"unlockTextElement":s=e[1],this.sendEvent(e.type,s);break;case"mouseDown":case"deleteGeos":case"viewChanged2D":case"dragEnd":break;default:console.debug("[GeoGebra] unhandled event ",e.type,e)}},this.conflictedObjects=[],this.dispatch=e=>{var t,s;if(this.conflictedObjects.includes(e.label)&&"conflictResolution"!==e.type)return;const i=e.embedLabel?this.embeds[e.embedLabel]:this,n=e.type,a=e.label,r=e.content;if(console.debug("[GeoGebra] receive:",n,a,r),"addObject"===n)if(i.api.exists(a))if(this.context.isDecider)if(this.context.isDecider(this.clientId)){let e,t=1;do{e=`${a}_${t}`,t++}while(i.api.exists(e));this.unregisterListeners(),i.api.renameObject(a,e),this.registerListeners();const s=i.api.getAlgorithmXML(e)||i.api.getXML(e);this.sendEvent("conflictResolution",s,a)}else this.conflictedObjects.push(a);else i.evalXML(r),i.api.previewRefresh();else i.evalXML(r),i.api.previewRefresh();else if("conflictResolution"===n){const e=this.conflictedObjects.indexOf(a);-1!==e&&this.conflictedObjects.splice(e,1),i.evalXML(r),i.api.previewRefresh()}else if("evalXML"===n)i.evalXML(r),i.api.previewRefresh();else if("setXML"===n)i.setXML(r);else if("evalCommand"===n)i.evalCommand(r),i.api.previewRefresh();else if("deleteObject"===n)i.unregisterListeners(),i===this&&delete this.embeds[r],i.api.deleteObject(r),i.registerListeners();else if("setEditorState"===n)i.unregisterListeners(),i.api.setEditorState(r,a),i.registerListeners();else if("addImage"===n){const e=JSON.parse(r);i.api.addImage(e.fileName,e.fileContent)}else if(["addSlide","removeSlide","moveSlide","clearSlide"].includes(n))i.api.handleSlideAction(n,r);else if("selectSlide"===n)i.unregisterListeners(),i.api.selectSlide(r),i.registerListeners();else if("renameObject"===n)i.unregisterListeners(),i.api.renameObject(r,a),i.registerListeners();else if("pasteSlide"===n)i.api.handleSlideAction(n,r,a);else if("evalGMContent"===n){const e=(i.api.getEmbeddedCalculators(!0)||{})[a];e&&e.loadFromJSON(r)}else if("startAnimation"===n)i.api.setAnimating(a,!0),i.api.startAnimation();else if("stopAnimation"===n)i.api.setAnimating(a,!1);else if("select"===n){if(r){const n=(null==(s=(t=this.context).getColor)?void 0:s.call(t,e.clientId))||"#80808080";i.api.addMultiuserSelection(String(e.clientId),n,r,!!a)}}else"deselect"===n?i.api.removeMultiuserSelections(String(e.clientId)):"orderingChange"===n?i.api.updateOrdering(r):"groupObjects"===n?i.api.groupObjects(r):"ungroupObjects"===n?i.api.ungroupObjects(r):"addToGroup"===n?i.api.addToGroup(r,a):"embeddedContentChanged"===n?i.api.setEmbedContent(a,r):"addGeoToTV"===n?i.api.addGeoToTV(r):"setValuesOfTV"===n?i.api.setValuesOfTV(r):"removeGeoFromTV"===n?i.api.removeGeoFromTV(r):"showPointsTV"===n?i.api.showPointsTV(r,a):"lockTextElement"===n?i.api.lockTextElement(r):"unlockTextElement"===n?i.api.unlockTextElement(r):console.debug("[GeoGebra] unknown event",n,r,a)},this.api=e.api,this.clientId=e.clientId,this.delay=null!=(t=e.delay)?t:200,this.context=e}createEvent(e,t,s){const i={type:e,content:t,clientId:this.clientId};return this.context.embedLabel&&(i.embedLabel=this.context.embedLabel),s&&(i.label=s),i}sendEvent(e,t,s){console.log("[GeoGebra] send:",e,s,t),this.context.postMessage(this.createEvent(e,t,s)),this.storageCallback||(this.storageCallback=setTimeout((()=>{this.context.save(this.api.getBase64()),this.storageCallback=0}),this.delay))}evalCommand(e){this.unregisterListeners(),this.api.evalCommand(e),this.registerListeners()}evalXML(e){this.unregisterListeners(),this.api.evalXML(e),this.api.updateConstruction(),this.registerListeners(),setTimeout(this.initAllEmbeds,500)}setXML(e){this.unregisterListeners(),this.api.setXML(e),this.api.updateConstruction(),this.registerListeners()}initEmbed(e){if(this.embeds[e])return;const i=this.api.getEmbeddedCalculators();if(!i)return;const n=i[e];if(n&&"registerClientListener"in n){const i=new p((a=o({},this.context),r={clientId:this.clientId,api:n,embedLabel:e},t(a,s(r))));i.registerListeners(),this.embeds[e]=i}var a,r}registerListeners(){this.api.registerUpdateListener(this.updateListener),this.api.registerRemoveListener(this.removeListener),this.api.registerAddListener(this.addListener),this.api.registerClientListener(this.clientListener),this.api.registerRenameListener(this.renameListener)}unregisterListeners(){this.api.unregisterUpdateListener(this.updateListener),this.api.unregisterRemoveListener(this.removeListener),this.api.unregisterAddListener(this.addListener),this.api.unregisterClientListener(this.clientListener),this.api.unregisterRenameListener(this.renameListener)}}const g={kind:"GeoGebra",async setup(e){const t=d(e,{ggbBase64:""}),s=e.getBox();s.mountStyles(".netless-app-geogebra{width:100%!important;height:100%!important;overflow:hidden}.netless-app-geogebra.loading{background-color:#fff}\n");const i=document.createElement("div");i.classList.add("netless-app-geogebra","loading"),s.mountContent(i);const n=new l,a=o({},h);let r;t.ggbBase64&&(a.ggbBase64=t.ggbBase64),a.id="ggb_"+e.appId;const g=function(e,t,s){const i=e.getDisplayer(),n=e.getRoom();let a=[];const r="sync--"+e.appId;return i.addMagixEventListener(r,(e=>{e.authorId!==i.observerId&&a.forEach((t=>t(e.payload)))})),{service:{addListener(e){a.push(e)},postMessage(e){null==n||n.dispatchMagixEvent(r,e)},load:()=>t[s],save(t){e.updateAttributes([s],t)}},disposer:()=>{a=[],i.removeMagixEventListener(r)}}}(e,t,"ggbBase64");function b(){const{width:e,height:t}=i.getBoundingClientRect();null==r||r.setWidth(e),null==r||r.setHeight(t)}a.appletOnLoad=t=>{console.log(`[GeoGebra]: loaded ${JSON.stringify(a.id)}`),r=t,b(),i.classList.remove("loading");const s=e.getDisplayer(),n=new p(o({clientId:s.observerId,api:t,isDecider:e=>s.state.roomMembers.map((e=>e.memberId)).every((t=>e<=t)),getColor:e=>"#"+s.memberState(e).strokeColor.map((e=>e.toString(16).padStart(2,"0"))).join("")+"80"},g.service));n.registerListeners(),g.service.addListener((e=>{n.dispatch(e),null==r||r.setUndoPoint()}))},n.add((()=>function(e,t){const s=new ResizeObserver((()=>t(e)));return s.observe(e),()=>s.disconnect()}(i,b))),e.emitter.on("destroy",(()=>{console.log("[GeoGebra]: destroy"),n.flushAll(),g.disposer(),null==r||r.remove()}));new(await function(){if(window.GGBApplet)return Promise.resolve(window.GGBApplet);if(c)return c;{const e=document.createElement("script");return c=new Promise(((t,s)=>{e.onload=()=>t(window.GGBApplet),e.onerror=()=>{c=void 0,s()}})),e.src="https://www.geogebra.org/apps/deployggb.js",document.head.appendChild(e),c}}())(a).inject(i)}};export{g as default};
