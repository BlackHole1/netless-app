class n{constructor(){this.disposers=new Map,this.disposerIDGenCount=-1}add(s,e=this.genDisposerID()){return this.flush(e),this.disposers.set(e,s()),e}addEventListener(s,e,t,r,i=this.genDisposerID()){return this.add(()=>(s.addEventListener(e,t,r),()=>s.removeEventListener(e,t,r)),i),i}setTimeout(s,e,t=this.genDisposerID()){return this.add(()=>{const r=window.setTimeout(()=>{this.remove(t),s()},e);return()=>window.clearTimeout(r)},t)}setInterval(s,e,t=this.genDisposerID()){return this.add(()=>{const r=window.setInterval(s,e);return()=>window.clearInterval(r)},t)}remove(s){const e=this.disposers.get(s);return this.disposers.delete(s),e}flush(s){const e=this.remove(s);if(e)try{e()}catch(t){console.error(t)}}flushAll(){this.disposers.forEach(s=>{try{s()}catch(e){console.error(e)}}),this.disposers.clear()}genDisposerID(){const{MAX_SAFE_INTEGER:s=9007199254740991}=Number;return this.disposerIDGenCount=(this.disposerIDGenCount+1)%s,`disposer-${this.disposerIDGenCount}`}}export{n as s};
