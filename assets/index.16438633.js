var C=Object.defineProperty,k=Object.defineProperties;var M=Object.getOwnPropertyDescriptors;var S=Object.getOwnPropertySymbols;var G=Object.prototype.hasOwnProperty,O=Object.prototype.propertyIsEnumerable;var w=(n,o,t)=>o in n?C(n,o,{enumerable:!0,configurable:!0,writable:!0,value:t}):n[o]=t,v=(n,o)=>{for(var t in o||(o={}))G.call(o,t)&&w(n,t,o[t]);if(S)for(var t of S(o))O.call(o,t)&&w(n,t,o[t]);return n},E=(n,o)=>k(n,M(o));import{s as T}from"./side-effect-manager.es.3578cf95.js";import{e as A}from"./ensure-attributes.2c659353.js";let b;function j(){if(window.GGBApplet)return Promise.resolve(window.GGBApplet);if(b)return b;{const n=document.createElement("script");return b=new Promise((o,t)=>{n.onload=()=>o(window.GGBApplet),n.onerror=()=>{b=void 0,t()}}),n.src="https://www.geogebra.org/apps/deployggb.js",document.head.appendChild(n),b}}const I={appName:"classic",showMenuBar:!0,showAlgebraInput:!0,showToolBar:!0,customToolBar:"0 39 73 62 | 1 501 67 , 5 19 , 72 75 76 | 2 15 45 , 18 65 , 7 37 | 4 3 8 9 , 13 44 , 58 , 47 | 16 51 64 , 70 | 10 34 53 11 , 24  20 22 , 21 23 | 55 56 57 , 12 | 36 46 , 38 49  50 , 71  14  68 | 30 29 54 32 31 33 | 25 17 26 60 52 61 | 40 41 42 , 27 28 35 , 6",showToolBarHelp:!1,showResetIcon:!1,enableFileFeatures:!1,enableLabelDrags:!1,enableShiftDragZoom:!0,enableRightClick:!0,errorDialogsActive:!1,allowStyleBar:!1,preventFocus:!1,useBrowserForJS:!0,language:"en",borderColor:"transparent"},f=class{constructor(n){var o;this.currentAnimations=[],this.embeds={},this.storageCallback=0,this.initAllEmbeds=()=>{for(const t of this.api.getAllObjectNames("embed"))this.initEmbed(t)},this.objectsInWaiting=[],this.updateCallback=0,this.dispatchUpdates=()=>{this.updateCallback||(this.updateCallback=setTimeout(this._dispatchUpdates,this.delay))},this._dispatchUpdates=()=>{const{objectsInWaiting:t}=this;this.objectsInWaiting=[];for(const i of t){const e=this.api.getEmbeddedCalculators(!0),s=e==null?void 0:e[i];(s==null?void 0:s.controller)&&this.sendEvent("evalGMContent",s.toJSON(),i);const r=this.api.getCommandString(i,!1);if(r){this.sendEvent("evalCommand",`${i} := ${r}`,i);const a=this.api.getObjectsOfItsGroup(i);(a==null?void 0:a.length)&&this.sendEvent("addToGroup",i,a)}if(!r||this.api.isMoveable(i)){const a=this.api.getXML(i);this.sendEvent("evalXML",a,i)}this.sendEvent("select",i,!0)}this.updateCallback=0},this.updateListener=t=>{(this.api.hasUnlabeledPredecessors(t)||this.api.isMoveable(t))&&!this.currentAnimations.includes(t)&&(this.objectsInWaiting.includes(t)||(this.objectsInWaiting.push(t),this.dispatchUpdates()))},this.addListener=t=>{const i=this.api.getImageFileName(t);if(i){const a=this.api.getFileJSON();for(const d of a.archive)d.fileName.includes(i)&&this.sendEvent("addImage",JSON.stringify(d))}const e=this.api.getXML(t),r=this.api.getCommandString(t)&&this.api.getAlgorithmXML(t);this.sendEvent("addObject",r||e,t),this.sendEvent("deselect"),this.sendEvent("select",t,!0),setTimeout(()=>this.initEmbed(t),500)},this.removeListener=t=>{this.sendEvent("deleteObject",t),delete this.embeds[t]},this.renameListener=(t,i)=>{this.sendEvent("renameObject",t,i)},this.isSyncingViewState=0,this.stopSyncViewState=()=>{this.isSyncingViewState=0},this._flushViewState=()=>{const{invXscale:t,invYscale:i,xMin:e,yMin:s}=JSON.parse(this.api.getViewProperties(0)),r=1/t,a=-e/t,d=-s/i;return this.viewState={scale:r,x:a,y:d},this.viewSyncCallback=0,this.viewState},this.clientListener=t=>{let i,e;const s=t.type;switch(s){case"updateStyle":i=t.target,e=this.api.getXML(i),this.sendEvent("evalXML",e);break;case"editorStart":this.lastEditingLabel=t.target;break;case"editorKeyTyped":e=this.api.getEditorState(),this.sendEvent("setEditorState",e,this.lastEditingLabel);break;case"editorStop":this.lastEditingLabel=void 0,this.sendEvent("setEditorState",JSON.stringify({content:""}));break;case"deselect":this.sendEvent("deselect",t.target);break;case"select":this.sendEvent("select",t.target);break;case"embeddedContentChanged":i=t[1],e=t[2],this.sendEvent("embeddedContentChanged",e,i);break;case"undo":case"redo":case"addPolygonComplete":e=this.api.getXML(),this.sendEvent("setXML",e);break;case"addSlide":this.sendEvent(s);break;case"removeSlide":case"moveSlide":case"selectSlide":case"clearSlide":case"orderingChange":e=t[2],this.sendEvent(s,e);break;case"pasteSlide":({cardIdx:e,ggbFile:i}=t),this.sendEvent(s,e,i);break;case"startAnimation":i=t[1],this.currentAnimations.push(i),this.sendEvent(s,i,i);break;case"stopAnimation":i=t[1],this.currentAnimations.splice(this.currentAnimations.indexOf(i),1),this.sendEvent(s,i,i);break;case"groupObjects":case"ungroupObjects":e=t.targets,this.sendEvent(s,e);break;case"pasteElmsComplete":e=t.targets.map(r=>this.api.getXML(r)).join(""),this.sendEvent("evalXML",e);break;case"addGeoToTV":case"removeGeoFromTV":e=t[1],this.sendEvent(s,e);break;case"setValuesOfTV":e=t[2],this.sendEvent(s,e);break;case"showPointsTV":({column:e,show:i}=t),this.sendEvent(s,e,i);break;case"lockTextElement":case"unlockTextElement":e=t[1],this.sendEvent(s,e);break;case"viewChanged2D":this.viewSyncCallback||(this.isSyncingViewState||this.viewState.scale===0?this.viewSyncCallback=setTimeout(this._flushViewState,this.delay):this.viewSyncCallback=setTimeout(this._sendViewSyncEvent,this.delay));break;case"mouseDown":case"deleteGeos":case"dragEnd":break;default:console.debug("[GeoGebra] unhandled event ",t.type,t)}},this.viewSyncCallback=0,this.viewState={scale:0,x:0,y:0},this._sendViewSyncEvent=()=>{this._flushViewState(),this.sendEvent("viewChanged2D",JSON.stringify(this.viewState)),this.viewSyncCallback=0},this._delayedRegisterListeners=()=>{this.registerListeners(),this.viewSyncCallback=0},this.conflictedObjects=[],this.dispatch=t=>{var d,g;if(this.conflictedObjects.includes(t.label)&&t.type!=="conflictResolution")return;const e=t.embedLabel?this.embeds[t.embedLabel]:this,s=t.type,r=t.label,a=t.content;if(console.debug("[GeoGebra] receive:",s,r,a),s==="addObject")if(e.api.exists(r))if(this.context.isDecider)if(this.context.isDecider(this.clientId)){let l=1,c;do c=`${r}_${l}`,l++;while(e.api.exists(c));this.unregisterListeners(),e.api.renameObject(r,c),this.registerListeners();const h=e.api.getAlgorithmXML(c)||e.api.getXML(c);this.sendEvent("conflictResolution",h,r)}else this.conflictedObjects.push(r);else e.evalXML(a),e.api.previewRefresh();else e.evalXML(a),e.api.previewRefresh();else if(s==="conflictResolution"){const l=this.conflictedObjects.indexOf(r);l!==-1&&this.conflictedObjects.splice(l,1),e.evalXML(a),e.api.previewRefresh()}else if(s==="evalXML")e.evalXML(a),e.api.previewRefresh();else if(s==="setXML")e.setXML(a);else if(s==="evalCommand")e.evalCommand(a),e.api.previewRefresh();else if(s==="deleteObject")e.unregisterListeners(),e===this&&delete this.embeds[a],e.api.deleteObject(a),e.registerListeners();else if(s==="setEditorState")e.unregisterListeners(),e.api.setEditorState(a,r),e.registerListeners();else if(s==="addImage"){const l=JSON.parse(a);e.api.addImage(l.fileName,l.fileContent)}else if(["addSlide","removeSlide","moveSlide","clearSlide"].includes(s))e.api.handleSlideAction(s,a);else if(s==="selectSlide")e.unregisterListeners(),e.api.selectSlide(a),e.registerListeners();else if(s==="renameObject")e.unregisterListeners(),e.api.renameObject(a,r),e.registerListeners();else if(s==="pasteSlide")e.api.handleSlideAction(s,a,r);else if(s==="evalGMContent"){const l=(e.api.getEmbeddedCalculators(!0)||{})[r];l&&l.loadFromJSON(a)}else if(s==="startAnimation")e.api.setAnimating(r,!0),e.api.startAnimation();else if(s==="stopAnimation")e.api.setAnimating(r,!1);else if(s==="select"){if(a){const l=((g=(d=this.context).getColor)==null?void 0:g.call(d,t.clientId))||"#80808080";e.api.addMultiuserSelection(String(t.clientId),l,a,!!r)}}else if(s==="deselect")e.api.removeMultiuserSelections(String(t.clientId));else if(s==="orderingChange")e.api.updateOrdering(a);else if(s==="groupObjects")e.api.groupObjects(a);else if(s==="ungroupObjects")e.api.ungroupObjects(a);else if(s==="addToGroup")e.api.addToGroup(a,r);else if(s==="embeddedContentChanged")e.api.setEmbedContent(r,a);else if(s==="addGeoToTV")e.api.addGeoToTV(a);else if(s==="setValuesOfTV")e.api.setValuesOfTV(a);else if(s==="removeGeoFromTV")e.api.removeGeoFromTV(a);else if(s==="showPointsTV")e.api.showPointsTV(a,r);else if(s==="lockTextElement")e.api.lockTextElement(a);else if(s==="unlockTextElement")e.api.unlockTextElement(a);else if(s==="viewChanged2D")if(e.viewState.scale===0)e.api.evalCommand("Pan(0,0)"),e.startSyncViewState();else{const{scale:l,x:c,y:h}=JSON.parse(a),p=e._flushViewState();e.startSyncViewState(),e.api.evalCommand(`Pan(${c-p.x},${h-p.y})`),e.api.evalCommand(`ZoomIn(${l/p.scale})`)}else console.debug("[GeoGebra] unknown event",s,a,r)},this.api=n.api,this.clientId=n.clientId,this.delay=(o=n.delay)!=null?o:200,this.context=n,setTimeout(()=>{this.api.evalCommand("Pan(0,0)")},this.delay)}createEvent(n,o,t){const i={type:n,content:o,clientId:this.clientId};return this.context.embedLabel&&(i.embedLabel=this.context.embedLabel),t&&(i.label=t),i}sendEvent(n,o,t){console.log("[GeoGebra] send:",n,t,o),this.context.postMessage(this.createEvent(n,o,t)),this.storageCallback||(this.storageCallback=setTimeout(()=>{this.context.save(this.api.getBase64()),this.storageCallback=0},this.delay))}evalCommand(n){this.unregisterListeners(),this.api.evalCommand(n),this.registerListeners()}evalXML(n){this.unregisterListeners(),this.api.evalXML(n),this.api.updateConstruction(),this.registerListeners(),setTimeout(this.initAllEmbeds,500)}setXML(n){this.unregisterListeners(),this.api.setXML(n),this.api.updateConstruction(),this.registerListeners()}initEmbed(n){if(this.embeds[n])return;const o=this.api.getEmbeddedCalculators();if(!o)return;const t=o[n];if(t&&"registerClientListener"in t){const i=new f(E(v({},this.context),{clientId:this.clientId,api:t,embedLabel:n}));i.registerListeners(),this.embeds[n]=i}}startSyncViewState(){clearTimeout(this.isSyncingViewState),this.isSyncingViewState=setTimeout(this.stopSyncViewState,1e3)}shouldSyncView(n,o,t,i){return Math.abs(o-n.scale)>f.Threshold/10||Math.abs(t-n.x)>f.Threshold||Math.abs(i-n.y)>f.Threshold}registerListeners(){this.api.registerUpdateListener(this.updateListener),this.api.registerRemoveListener(this.removeListener),this.api.registerAddListener(this.addListener),this.api.registerClientListener(this.clientListener),this.api.registerRenameListener(this.renameListener)}unregisterListeners(){this.api.unregisterUpdateListener(this.updateListener),this.api.unregisterRemoveListener(this.removeListener),this.api.unregisterAddListener(this.addListener),this.api.unregisterClientListener(this.clientListener),this.api.unregisterRenameListener(this.renameListener)}};let y=f;y.Threshold=20;var V=`.netless-app-geogebra{width:100%!important;height:100%!important;overflow:hidden}.netless-app-geogebra.loading{background-color:#fff}
`;function x(n,o){const t=new ResizeObserver(()=>o(n));return t.observe(n),()=>t.disconnect()}function X(n,o,t){const i=n.getDisplayer(),e=n.getRoom();let s=[];const r=l=>{l.authorId!==i.observerId&&s.forEach(c=>c(l.payload))},a="sync--"+n.appId;return i.addMagixEventListener(a,r),{service:{addListener(l){s.push(l)},postMessage(l){e==null||e.dispatchMagixEvent(a,l)},load(){return o[t]},save(l){n.updateAttributes([t],l)}},disposer:()=>{s=[],i.removeMagixEventListener(a)}}}const P={kind:"GeoGebra",async setup(n){const o=A(n,{ggbBase64:""}),t=n.getBox();t.mountStyles(V);const i=document.createElement("div");i.classList.add("netless-app-geogebra","loading"),t.mountContent(i);const e=new T,s=v({},I);o.ggbBase64&&(s.ggbBase64=o.ggbBase64),s.id="ggb_"+n.appId;let r;const a=X(n,o,"ggbBase64");function d(){const{width:c,height:h}=i.getBoundingClientRect();r==null||r.setWidth(c),r==null||r.setHeight(h)}s.appletOnLoad=c=>{console.log(`[GeoGebra]: loaded ${JSON.stringify(s.id)}`),r=c,d(),i.classList.remove("loading");const h=n.getDisplayer(),p=new y(v({clientId:h.observerId,api:c,isDecider:m=>h.state.roomMembers.map(u=>u.memberId).every(u=>m<=u),getColor:m=>{const L=h.memberState(m).strokeColor;return"#"+L.map(u=>u.toString(16).padStart(2,"0")).join("")+"80"}},a.service));p.registerListeners(),a.service.addListener(m=>{p.dispatch(m),r==null||r.setUndoPoint()})},e.add(()=>x(i,d)),n.emitter.on("destroy",()=>{console.log("[GeoGebra]: destroy"),e.flushAll(),a.disposer(),r==null||r.remove()});const g=await j();new g(s).inject(i)}};export{P as default};
